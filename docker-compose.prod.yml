version: "3.8"

services:
  fusion-scanner:
    extends:
      file: docker-compose.yml
      service: fusion-scanner
    environment:
      - NODE_ENV=production
      - PORT=8080
      - DATABASE_PATH=/app/data/scanner.db
      - NUCLEI_TEMPLATES_PATH=/app/nuclei-templates
      - LOGS_PATH=/app/logs
      - MAX_CONCURRENT_SCANS=10
      - SCAN_TIMEOUT=600000
      - WEBSOCKET_ENABLED=true
      - AI_ANALYSIS_ENABLED=true
      - DEMO_MODE=false
      - CORS_ORIGIN=https://yourdomain.com
      - SSL_ENABLED=true
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_WINDOW=900000 # 15 minutes
      - RATE_LIMIT_MAX=100
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 4G
          cpus: "2"
        reservations:
          memory: 2G
          cpus: "1"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  traefik:
    extends:
      file: docker-compose.yml
      service: traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@yourdomain.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.yourdomain.com`)"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"

  redis:
    extends:
      file: docker-compose.yml
      service: redis
    command: redis-server --appendonly yes --requirepass your_redis_password
    environment:
      - REDIS_PASSWORD=your_redis_password

  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    environment:
      - POSTGRES_DB=scanner
      - POSTGRES_USER=scanner
      - POSTGRES_PASSWORD=secure_production_password

volumes:
  letsencrypt:
    driver: local
