version: "3.8"

services:
  fusion-scanner:
    build:
      context: .
      dockerfile: Dockerfile.preconfigured
    container_name: fusion-scanner-app
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - DATABASE_PATH=/app/data/scanner.db
      - NUCLEI_TEMPLATES_PATH=/app/nuclei-templates
      - LOGS_PATH=/app/logs
      - MAX_CONCURRENT_SCANS=5
      - SCAN_TIMEOUT=300000
      - WEBSOCKET_ENABLED=true
      - AI_ANALYSIS_ENABLED=false
      - DEMO_MODE=true
      - CORS_ORIGIN=*
    volumes:
      - scanner_data:/app/data
      - scanner_logs:/app/logs
      - nuclei_templates:/app/nuclei-templates
    networks:
      - scanner_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fusion-scanner.rule=Host(`localhost`)"
      - "traefik.http.services.fusion-scanner.loadbalancer.server.port=8080"

  # Optional: Add a reverse proxy for production
  traefik:
    image: traefik:v3.0
    container_name: fusion-scanner-proxy
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8090:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - scanner_network
    restart: unless-stopped
    profiles:
      - "proxy"

  # Optional: Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: fusion-scanner-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - scanner_network
    restart: unless-stopped
    profiles:
      - "cache"

  # Optional: PostgreSQL for advanced data storage
  postgres:
    image: postgres:15-alpine
    container_name: fusion-scanner-postgres
    environment:
      - POSTGRES_DB=scanner
      - POSTGRES_USER=scanner
      - POSTGRES_PASSWORD=scanner_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - scanner_network
    restart: unless-stopped
    profiles:
      - "database"

networks:
  scanner_network:
    driver: bridge

volumes:
  scanner_data:
    driver: local
  scanner_logs:
    driver: local
  nuclei_templates:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
